plugins {
    alias(libs.plugins.android.application.gradle)
    alias(libs.plugins.kotlin.gradle)
    alias(libs.plugins.klint)
    alias(libs.plugins.detekt)
	id("kotlin-kapt")
    id("dagger.hilt.android.plugin")
	alias(libs.plugins.ksp)
}

// Properties 객체 생성
File localProperties = project.rootProject.file('local.properties')
Properties properties = new Properties()
if (localProperties.exists()) {
	properties.load(localProperties.newDataInputStream())
}

android {
    namespace 'com.lyfe.android'
    compileSdk libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        applicationId "com.lyfe.android"
        minSdk libs.versions.minSdk.get().toInteger()
        targetSdk libs.versions.targetSdk.get().toInteger()
        versionCode libs.versions.versionCode.get().toInteger()
        versionName libs.versions.versionName.get()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

		if (localProperties.exists()) {
			buildConfigField "String", "BASE_URL", properties['baseUrl']
			buildConfigField "String", "GOOGLE_API_URL", properties['googleApiUrl']
			buildConfigField "String", "GOOGLE_WEB_CLIENT_ID", properties['google-web-client-id']
			buildConfigField "String", "GOOGLE_WEB_CLIENT_SECRET", properties['google-web-client-secret']
		}
	}

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = libs.versions.jvmTarget.get()
    }
    buildFeatures {
		buildConfig true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.kotlinCompilerExtensionVersion.get()
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    detekt {
        buildUponDefaultConfig = true
        allRules = false
        config = files("$rootDir/detekt-config.yml")
    }
}

dependencies {

    implementation(libs.bundles.android.library)
    implementation(libs.bundles.compose.library)

    implementation(libs.bundles.hilt.android)
	kapt(libs.bundles.hilt.compiler)

	implementation(libs.bundles.network)
	implementation(libs.bundles.json.parser)

	implementation(libs.bundles.imageloader)
	ksp(libs.glide.compiler)

    testImplementation(libs.bundles.test)
    androidTestImplementation(libs.bundles.android.test)
    androidTestImplementation(libs.bundles.android.compose.test)
    debugImplementation(libs.bundles.compose.debug)

	implementation(libs.bundles.coil)

	implementation(libs.bundles.kakao)

	implementation(platform(libs.firebase.bom))
	implementation(libs.bundles.firebase)

	implementation(libs.bundles.play.services)
}